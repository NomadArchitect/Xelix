--- coreutils-8.32/build-aux/config.sub	2021-07-08 19:11:03.010563039 +0200
+++ coreutils-8.32/build-aux/config.sub	2021-07-08 19:11:11.407173590 +0200
@@ -1366,7 +1366,7 @@ case $os in
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
 	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
-	     | nsk* | powerunix)
+	     | nsk* | powerunix | xelix*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	qnx*)
--- coreutils-8.32/m4/host-os.m4  2018-05-14 06:20:31.000000000 +0200
+++ coreutils-8.32/m4/host-os.m4  2019-02-23 20:37:06.099700821 +0100
@@ -61,6 +61,7 @@
        atheos*)         os='AtheOS';;
        amigaos*)        os='Amiga OS';;
        aix*)            os='AIX';;
+       xelix*)          os='GNU/Xelix';;

        # The default heuristic takes the initial alphabetic string
        # from $host_os, but capitalizes its first letter.
diff -ruPN --exclude lib --exclude .deps --exclude blake2 coreutils-8.32/src/copy.c coreutils-8.32-patched/src/copy.c
--- coreutils-8.32/src/copy.c	2018-07-01 04:32:02.000000000 +0200
+++ coreutils-8.32-patched/src/copy.c	2019-02-04 03:03:11.537695627 +0100
@@ -1370,9 +1370,9 @@

   if (x->preserve_mode || x->move_mode)
     {
-      if (copy_acl (src_name, source_desc, dst_name, dest_desc, src_mode) != 0
-          && x->require_preserve)
-        return_val = false;
+      //if (copy_acl (src_name, source_desc, dst_name, dest_desc, src_mode) != 0
+      //    && x->require_preserve)
+      return_val = false;
     }
   else if (x->set_mode)
     {
@@ -2860,9 +2860,9 @@

   if (x->preserve_mode || x->move_mode)
     {
-      if (copy_acl (src_name, -1, dst_name, -1, src_mode) != 0
-          && x->require_preserve)
-        return false;
+      //if (copy_acl (src_name, -1, dst_name, -1, src_mode) != 0
+      //    && x->require_preserve)
+      return false;
     }
   else if (x->set_mode)
     {
diff -ruPN --exclude lib --exclude .deps --exclude blake2 coreutils-8.32/src/cp.c coreutils-8.32-patched/src/cp.c
--- coreutils-8.32/src/cp.c	2018-06-24 04:12:51.000000000 +0200
+++ coreutils-8.32-patched/src/cp.c	2019-02-04 03:02:49.004411264 +0100
@@ -327,8 +327,8 @@

       if (x->preserve_mode)
         {
-          if (copy_acl (src_name, -1, dst_name, -1, p->st.st_mode) != 0)
-            return false;
+          //if (copy_acl (src_name, -1, dst_name, -1, p->st.st_mode) != 0)
+          return false;
         }
       else if (p->restore_mode)
         {
diff -ruPN --exclude lib --exclude .deps --exclude blake2 coreutils-8.32/src/mknod.c coreutils-8.32-patched/src/mknod.c
--- coreutils-8.32/src/mknod.c	2018-05-14 06:20:24.000000000 +0200
+++ coreutils-8.32-patched/src/mknod.c	2019-02-04 03:03:39.980966121 +0100
@@ -240,7 +240,7 @@
           die (EXIT_FAILURE, 0,
                _("invalid minor device number %s"), quote (s_minor));

-        device = makedev (i_major, i_minor);
+        //device = makedev (i_major, i_minor);
 #ifdef NODEV
         if (device == NODEV)
           die (EXIT_FAILURE, 0, _("invalid device %s %s"),
--- coreutils-8.32/src/dircolors.hin	2018-06-24 04:12:51.000000000 +0200
+++ coreutils-8.32/src/dircolors.hin	2019-05-29 23:08:36.426222319 +0200
@@ -33,6 +33,7 @@ TERM st
 TERM terminator
 TERM tmux*
 TERM vt100
+TERM xelix
 TERM xterm*

 # Below are the color init strings for the basic file types. A color init
--- coreutils-8.32/src/who.c    2018-06-18 02:01:59.000000000 +0200
+++ coreutils-8.32/src/who.c    2019-10-13 04:12:29.396417459 +0200
@@ -217,6 +217,7 @@ idle_string (time_t when, time_t boottim
 static const char *
 time_string (const STRUCT_UTMP *utmp_ent)
 {
+  return "";
   static char buf[INT_STRLEN_BOUND (intmax_t) + sizeof "-%m-%d %H:%M"];

   /* Don't take the address of UT_TIME_MEMBER directly.
--- coreutils-8.32/lib/readutmp.c       2018-05-14 06:20:31.000000000 +0200
+++ coreutils-8.32/lib/readutmp.c       2019-10-13 04:12:34.126399765 +0200
@@ -71,11 +71,12 @@ desirable_utmp_entry (STRUCT_UTMP const
   bool user_proc = IS_USER_PROCESS (u);
   if ((options & READ_UTMP_USER_PROCESS) && !user_proc)
     return false;
-  if ((options & READ_UTMP_CHECK_PIDS)
+  /*if ((options & READ_UTMP_CHECK_PIDS)
       && user_proc
       && 0 < UT_PID (u)
       && (kill (UT_PID (u), 0) < 0 && errno == ESRCH))
     return false;
+  */
   return true;
 }

--- coreutils-8.32/src/stat.c	2018-06-25 00:32:14.000000000 +0200
+++ coreutils-8.32/src/stat.c	2020-01-10 07:13:43.378610409 +0100
@@ -28,6 +28,8 @@
 # define USE_STATVFS 0
 #endif
 
+#undef USE_STATVFS
+
 #include <stddef.h>
 #include <stdio.h>
 #include <stdalign.h>
@@ -230,7 +232,9 @@ static size_t decimal_point_len;
 static char const * ATTRIBUTE_WARN_UNUSED_RESULT
 human_fstype (STRUCT_STATVFS const *statfsbuf)
 {
-#ifdef STATXFS_FILE_SYSTEM_TYPE_MEMBER_NAME
+#if defined __xelix__
+  return "ext2/ext3";
+#elif defined STATXFS_FILE_SYSTEM_TYPE_MEMBER_NAME
   return statfsbuf->STATXFS_FILE_SYSTEM_TYPE_MEMBER_NAME;
 #else
   switch (statfsbuf->f_type)
@@ -808,6 +812,7 @@ print_statfs (char *pformat, size_t pref
               int fd, char const *filename,
               void const *data)
 {
+/*
   STRUCT_STATVFS const *statfsbuf = data;
   bool fail = false;
 
@@ -828,8 +833,8 @@ print_statfs (char *pformat, size_t pref
         verify (sizeof statfsbuf->f_fsid % alignof (fsid_word) == 0);
         fsid_word const *p = (fsid_word *) &statfsbuf->f_fsid;
 
-        /* Assume a little-endian word order, as that is compatible
-           with glibc's statvfs implementation.  */
+        / * Assume a little-endian word order, as that is compatible
+           with glibc's statvfs implementation.  * /
         uintmax_t fsid = 0;
         int words = sizeof statfsbuf->f_fsid / sizeof *p;
         for (int i = 0; i < words && i * sizeof *p < sizeof fsid; i++)
@@ -886,6 +891,8 @@ print_statfs (char *pformat, size_t pref
       break;
     }
   return fail;
+
+*/
 }
 
 /* Return any bind mounted source for a path.
@@ -1343,6 +1350,7 @@ print_it (char const *format, int fd, ch
 static bool ATTRIBUTE_WARN_UNUSED_RESULT
 do_statfs (char const *filename, char const *format)
 {
+/*
   STRUCT_STATVFS statfsbuf;
 
   if (STREQ (filename, "-"))
@@ -1361,6 +1369,7 @@ do_statfs (char const *filename, char co
 
   bool fail = print_it (format, -1, filename, print_statfs, &statfsbuf);
   return ! fail;
+*/
 }
 
 /* stat the file and print what we find */
