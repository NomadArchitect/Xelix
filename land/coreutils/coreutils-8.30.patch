--- coreutils-8.30/build-aux/config.sub	2018-06-24 06:52:06.000000000 +0200
+++ coreutils-8.30/build-aux/config.sub	2018-09-19 03:48:03.896912948 +0200
@@ -1376,7 +1376,7 @@
 	     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
-	     | midnightbsd*)
+	     | midnightbsd* | xelix*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	qnx*)
--- coreutils-8.30/m4/host-os.m4  2018-05-14 06:20:31.000000000 +0200
+++ coreutils-8.30/m4/host-os.m4  2019-02-23 20:37:06.099700821 +0100
@@ -61,6 +61,7 @@
        atheos*)         os='AtheOS';;
        amigaos*)        os='Amiga OS';;
        aix*)            os='AIX';;
+       xelix*)          os='GNU/Xelix';;

        # The default heuristic takes the initial alphabetic string
        # from $host_os, but capitalizes its first letter.
diff -ruPN --exclude lib --exclude .deps --exclude blake2 coreutils-8.30/src/copy.c coreutils-8.30-patched/src/copy.c
--- coreutils-8.30/src/copy.c	2018-07-01 04:32:02.000000000 +0200
+++ coreutils-8.30-patched/src/copy.c	2019-02-04 03:03:11.537695627 +0100
@@ -1370,9 +1370,9 @@

   if (x->preserve_mode || x->move_mode)
     {
-      if (copy_acl (src_name, source_desc, dst_name, dest_desc, src_mode) != 0
-          && x->require_preserve)
-        return_val = false;
+      //if (copy_acl (src_name, source_desc, dst_name, dest_desc, src_mode) != 0
+      //    && x->require_preserve)
+      return_val = false;
     }
   else if (x->set_mode)
     {
@@ -2860,9 +2860,9 @@

   if (x->preserve_mode || x->move_mode)
     {
-      if (copy_acl (src_name, -1, dst_name, -1, src_mode) != 0
-          && x->require_preserve)
-        return false;
+      //if (copy_acl (src_name, -1, dst_name, -1, src_mode) != 0
+      //    && x->require_preserve)
+      return false;
     }
   else if (x->set_mode)
     {
diff -ruPN --exclude lib --exclude .deps --exclude blake2 coreutils-8.30/src/cp.c coreutils-8.30-patched/src/cp.c
--- coreutils-8.30/src/cp.c	2018-06-24 04:12:51.000000000 +0200
+++ coreutils-8.30-patched/src/cp.c	2019-02-04 03:02:49.004411264 +0100
@@ -327,8 +327,8 @@

       if (x->preserve_mode)
         {
-          if (copy_acl (src_name, -1, dst_name, -1, p->st.st_mode) != 0)
-            return false;
+          //if (copy_acl (src_name, -1, dst_name, -1, p->st.st_mode) != 0)
+          return false;
         }
       else if (p->restore_mode)
         {
diff -ruPN --exclude lib --exclude .deps --exclude blake2 coreutils-8.30/src/mknod.c coreutils-8.30-patched/src/mknod.c
--- coreutils-8.30/src/mknod.c	2018-05-14 06:20:24.000000000 +0200
+++ coreutils-8.30-patched/src/mknod.c	2019-02-04 03:03:39.980966121 +0100
@@ -240,7 +240,7 @@
           die (EXIT_FAILURE, 0,
                _("invalid minor device number %s"), quote (s_minor));

-        device = makedev (i_major, i_minor);
+        //device = makedev (i_major, i_minor);
 #ifdef NODEV
         if (device == NODEV)
           die (EXIT_FAILURE, 0, _("invalid device %s %s"),
--- coreutils-8.30/lib/opendir.c  2018-05-14 06:20:31.000000000 +0200
+++ coreutils-8.30-patched/lib/opendir.c  2019-02-04 21:01:30.771424111 +0100
@@ -152,7 +152,8 @@

 #endif

-#if REPLACE_FCHDIR
+//#if REPLACE_FCHDIR
+#if 0
   {
     int fd = dirfd (dirp);
     if (0 <= fd && _gl_register_fd (fd, dir_name) != fd)
--- coreutils-8.30/src/dircolors.hin	2018-06-24 04:12:51.000000000 +0200
+++ coreutils-8.30/src/dircolors.hin	2019-05-29 23:08:36.426222319 +0200
@@ -33,6 +33,7 @@ TERM st
 TERM terminator
 TERM tmux*
 TERM vt100
+TERM xelix
 TERM xterm*

 # Below are the color init strings for the basic file types. A color init
--- coreutils-8.30/src/who.c    2018-06-18 02:01:59.000000000 +0200
+++ coreutils-8.30/src/who.c    2019-10-13 04:12:29.396417459 +0200
@@ -217,6 +217,7 @@ idle_string (time_t when, time_t boottim
 static const char *
 time_string (const STRUCT_UTMP *utmp_ent)
 {
+  return "";
   static char buf[INT_STRLEN_BOUND (intmax_t) + sizeof "-%m-%d %H:%M"];

   /* Don't take the address of UT_TIME_MEMBER directly.
--- coreutils-8.30/lib/readutmp.c       2018-05-14 06:20:31.000000000 +0200
+++ coreutils-8.30/lib/readutmp.c       2019-10-13 04:12:34.126399765 +0200
@@ -71,11 +71,12 @@ desirable_utmp_entry (STRUCT_UTMP const
   bool user_proc = IS_USER_PROCESS (u);
   if ((options & READ_UTMP_USER_PROCESS) && !user_proc)
     return false;
-  if ((options & READ_UTMP_CHECK_PIDS)
+  /*if ((options & READ_UTMP_CHECK_PIDS)
       && user_proc
       && 0 < UT_PID (u)
       && (kill (UT_PID (u), 0) < 0 && errno == ESRCH))
     return false;
+  */
   return true;
 }

