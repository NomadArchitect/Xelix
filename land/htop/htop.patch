--- configure.ac	2021-01-11 18:18:21.000000000 +0100
+++ configure.ac	2021-07-07 15:15:31.702401443 +0200
@@ -48,6 +48,10 @@ solaris*)
    my_htop_platform=solaris
    AC_DEFINE([HTOP_SOLARIS], [], [Building for Solaris])
    ;;
+xelix*)
+   my_htop_platform=xelix
+   AC_DEFINE([HTOP_XELIX], [], [Building for Xelix])
+   ;;
 *)
    my_htop_platform=unsupported
    AC_DEFINE([HTOP_UNSUPPORTED], [], [Building for an unsupported platform])
@@ -379,6 +383,7 @@ AM_CONDITIONAL([HTOP_DRAGONFLYBSD], [tes
 AM_CONDITIONAL([HTOP_OPENBSD], [test "$my_htop_platform" = openbsd])
 AM_CONDITIONAL([HTOP_DARWIN], [test "$my_htop_platform" = darwin])
 AM_CONDITIONAL([HTOP_SOLARIS], [test "$my_htop_platform" = solaris])
+AM_CONDITIONAL([HTOP_XELIX], [test "$my_htop_platform" = xelix])
 AM_CONDITIONAL([HTOP_UNSUPPORTED], [test "$my_htop_platform" = unsupported])
 AC_SUBST(my_htop_platform)
 AC_CONFIG_FILES([Makefile htop.1])
--- Makefile.am	2021-07-07 15:06:05.306299996 +0200
+++ Makefile.am	2021-07-07 15:08:14.842069872 +0200
@@ -258,6 +258,25 @@ zfs/ZfsArcMeter.c zfs/ZfsCompressedArcMe
 myhtopplatheaders = $(solaris_platform_headers)
 endif
 
+# Xelix
+# ------------
+
+xelix_platform_headers = \
+	xelix/XelixProcessList.h \
+	xelix/XelixProcess.h \
+	xelix/Platform.h \
+	xelix/ProcessField.h
+
+if HTOP_XELIX
+myhtopplatsources = \
+	xelix/Platform.c \
+	xelix/XelixProcessList.c \
+	xelix/XelixProcess.c
+
+myhtopplatheaders = $(xelix_platform_headers)
+endif
+
+
 # Unsupported
 # -----------
 
--- Process.c	2021-07-07 15:09:38.698157689 +0200
+++ Process.c	2021-07-07 15:10:16.207899179 +0200
@@ -459,6 +459,9 @@ bool Process_isTomb(const Process* this)
 }
 
 bool Process_setPriority(Process* this, int priority) {
+#ifdef __xelix__
+   return false;
+#else
    CRT_dropPrivileges();
    int old_prio = getpriority(PRIO_PROCESS, this->pid);
    int err = setpriority(PRIO_PROCESS, this->pid, priority);
@@ -467,6 +470,7 @@ bool Process_setPriority(Process* this,
       this->nice = priority;
    }
    return (err == 0);
+#endif
 }
 
 bool Process_changePriorityBy(Process* this, Arg delta) {
--- Compat.c	2021-07-07 15:25:59.098147051 +0200
+++ Compat.c	2021-07-07 15:26:11.848061213 +0200
@@ -146,7 +146,8 @@ int Compat_clock_monotonic_gettime(struc
 
 #else
 
-#error No Compat_clock_monotonic_gettime() implementation!
+// #error No Compat_clock_monotonic_gettime() implementation!
+return 0;
 
 #endif
 
--- htop.c	2021-07-07 17:35:27.839793870 +0200
+++ htop.c	2021-07-07 17:35:42.856331946 +0200
@@ -235,6 +235,7 @@ static CommandLineSettings parseArgument
 }
 
 static void millisleep(unsigned long millisec) {
+#ifndef __xelix__
    struct timespec req = {
       .tv_sec = 0,
       .tv_nsec = millisec * 1000000L
@@ -242,6 +243,7 @@ static void millisleep(unsigned long mil
    while(nanosleep(&req,&req)==-1) {
       continue;
    }
+#endif
 }
 
 static void setCommFilter(State* state, char** commFilter) {
