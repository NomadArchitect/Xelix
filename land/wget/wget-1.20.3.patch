--- wget-1.20.3/build-aux/config.sub	2019-04-01 20:14:36.000000000 +0200
+++ wget-1.20.3/build-aux/config.sub	2020-01-11 01:07:42.266327872 +0100
@@ -1367,7 +1367,7 @@ case $os in
 	     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
-	     | midnightbsd* | amdhsa* | unleashed* | emscripten*)
+	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | xelix*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	qnx*)
diff -rupN wget-1.20.3/lib/spawnattr_setflags.c wget-1.20.3/lib/spawnattr_setflags.c
--- wget-1.20.3/lib/spawnattr_setflags.c	2018-12-26 21:08:19.000000000 +0100
+++ wget-1.20.3/lib/spawnattr_setflags.c	2019-02-14 01:21:24.751143409 +0100
@@ -28,7 +28,7 @@
                    | POSIX_SPAWN_SETSIGMASK                                   \
                    | POSIX_SPAWN_SETSCHEDPARAM                                \
                    | POSIX_SPAWN_SETSCHEDULER                                 \
-                   | POSIX_SPAWN_USEVFORK)
+                   )

 /* Store flags in the attribute structure.  */
 int
@@ -39,7 +39,7 @@ posix_spawnattr_setflags (posix_spawnatt
     return EINVAL;

   /* Store the flag word.  */
-  attr->_flags = flags;
+  //attr->_flags = flags;

   return 0;
 }
diff -rupN wget-1.20.3/lib/spawnattr_setsigmask.c wget-1.20.3/lib/spawnattr_setsigmask.c
--- wget-1.20.3/lib/spawnattr_setsigmask.c	2018-12-26 21:08:19.000000000 +0100
+++ wget-1.20.3/lib/spawnattr_setsigmask.c	2019-02-14 01:21:39.397790643 +0100
@@ -27,7 +27,7 @@ posix_spawnattr_setsigmask (posix_spawna
                             const sigset_t *sigmask)
 {
   /* Copy the sigset_t data to the user buffer.  */
-  memcpy (&attr->_ss, sigmask, sizeof (sigset_t));
+  //memcpy (&attr->_ss, sigmask, sizeof (sigset_t));

   return 0;
 }
diff -rupN wget-1.20.3/lib/spawn_faction_addclose.c wget-1.20.3/lib/spawn_faction_addclose.c
--- wget-1.20.3/lib/spawn_faction_addclose.c	2018-12-26 21:08:19.000000000 +0100
+++ wget-1.20.3/lib/spawn_faction_addclose.c	2019-02-14 01:18:36.131378184 +0100
@@ -43,7 +43,7 @@ posix_spawn_file_actions_addclose (posix
   if (fd < 0 || fd >= maxfd)
     return EBADF;

-#if !REPLACE_POSIX_SPAWN
+#if 1
   return posix_spawn_file_actions_addclose (file_actions, fd);
 #else
   /* Allocate more memory if needed.  */
diff -rupN wget-1.20.3/lib/spawn_faction_adddup2.c wget-1.20.3/lib/spawn_faction_adddup2.c
--- wget-1.20.3/lib/spawn_faction_adddup2.c	2018-12-26 21:08:19.000000000 +0100
+++ wget-1.20.3/lib/spawn_faction_adddup2.c	2019-02-14 01:19:07.874666373 +0100
@@ -43,7 +43,7 @@ posix_spawn_file_actions_adddup2 (posix_
   if (fd < 0 || newfd < 0 || fd >= maxfd || newfd >= maxfd)
     return EBADF;

-#if !REPLACE_POSIX_SPAWN
+#if 1
   return posix_spawn_file_actions_adddup2 (file_actions, fd, newfd);
 #else
   /* Allocate more memory if needed.  */
diff -rupN wget-1.20.3/lib/spawn_faction_addopen.c wget-1.20.3/lib/spawn_faction_addopen.c
--- wget-1.20.3/lib/spawn_faction_addopen.c	2018-12-26 21:08:19.000000000 +0100
+++ wget-1.20.3/lib/spawn_faction_addopen.c	2019-02-14 01:19:21.314647293 +0100
@@ -44,7 +44,7 @@ posix_spawn_file_actions_addopen (posix_
   if (fd < 0 || fd >= maxfd)
     return EBADF;

-#if !REPLACE_POSIX_SPAWN
+#if 1
   return posix_spawn_file_actions_addopen (file_actions, fd, path, oflag, mode);
 #else
   /* Allocate more memory if needed.  */
diff -rupN wget-1.20.3/lib/spawn_faction_destroy.c wget-1.20.3/lib/spawn_faction_destroy.c
--- wget-1.20.3/lib/spawn_faction_destroy.c	2018-12-26 21:08:19.000000000 +0100
+++ wget-1.20.3/lib/spawn_faction_destroy.c	2019-02-14 01:19:39.521288163 +0100
@@ -26,6 +26,6 @@ int
 posix_spawn_file_actions_destroy (posix_spawn_file_actions_t *file_actions)
 {
   /* Free the memory allocated.  */
-  free (file_actions->_actions);
+  //free (file_actions->_actions);
   return 0;
 }
diff -rupN wget-1.20.3/lib/spawn_faction_init.c wget-1.20.3/lib/spawn_faction_init.c
--- wget-1.20.3/lib/spawn_faction_init.c	2018-12-26 21:08:19.000000000 +0100
+++ wget-1.20.3/lib/spawn_faction_init.c	2019-02-14 01:20:32.444546751 +0100
@@ -31,17 +31,6 @@
 int
 __posix_spawn_file_actions_realloc (posix_spawn_file_actions_t *file_actions)
 {
-  int newalloc = file_actions->_allocated + 8;
-  void *newmem = realloc (file_actions->_actions,
-                          newalloc * sizeof (struct __spawn_action));
-
-  if (newmem == NULL)
-    /* Not enough memory.  */
-    return ENOMEM;
-
-  file_actions->_actions = (struct __spawn_action *) newmem;
-  file_actions->_allocated = newalloc;
-
   return 0;
 }

@@ -50,7 +39,5 @@ __posix_spawn_file_actions_realloc (posi
 int
 posix_spawn_file_actions_init (posix_spawn_file_actions_t *file_actions)
 {
-  /* Simply clear all the elements.  */
-  memset (file_actions, '\0', sizeof (*file_actions));
   return 0;
 }
diff -rupN wget-1.20.3/lib/spawni.c wget-1.20.3/lib/spawni.c
--- wget-1.20.3/lib/spawni.c	2018-12-26 21:08:19.000000000 +0100
+++ wget-1.20.3/lib/spawni.c	2019-02-14 01:25:01.757719172 +0100
@@ -147,15 +147,15 @@ __spawni (pid_t *pid, const char *file,
   size_t pathlen;

   /* Do this once.  */
-  short int flags = attrp == NULL ? 0 : attrp->_flags;
+  //short int flags = attrp == NULL ? 0 : attrp->_flags;

   /* Avoid gcc warning
        "variable 'flags' might be clobbered by 'longjmp' or 'vfork'"  */
-  (void) &flags;
+  //(void) &flags;

   /* Generate the new process.  */
-#if HAVE_VFORK
-  if ((flags & POSIX_SPAWN_USEVFORK) != 0
+#if 0
+  if (0 != 0
       /* If no major work is done, allow using vfork.  Note that we
          might perform the path searching.  But this would be done by
          a call to execvp(), too, and such a call must be OK according
@@ -182,12 +182,12 @@ __spawni (pid_t *pid, const char *file,
     }

   /* Set signal mask.  */
-  if ((flags & POSIX_SPAWN_SETSIGMASK) != 0
+  /*if ((flags & POSIX_SPAWN_SETSIGMASK) != 0
       && sigprocmask (SIG_SETMASK, &attrp->_ss, NULL) != 0)
     _exit (SPAWN_ERROR);
-
+*/
   /* Set signal default action.  */
-  if ((flags & POSIX_SPAWN_SETSIGDEF) != 0)
+  if (0 != 0)
     {
       /* We have to iterate over all signals.  This could possibly be
          done better but it requires system specific solutions since
@@ -199,12 +199,12 @@ __spawni (pid_t *pid, const char *file,
       memset (&sa, '\0', sizeof (sa));
       sa.sa_handler = SIG_DFL;

-      for (sig = 1; sig <= NSIG; ++sig)
+/*      for (sig = 1; sig <= NSIG; ++sig)
         if (sigismember (&attrp->_sd, sig) != 0
             && sigaction (sig, &sa, NULL) != 0)
           _exit (SPAWN_ERROR);

-    }
+*/    }

 #if (_LIBC ? defined _POSIX_PRIORITY_SCHEDULING : HAVE_SCHED_SETPARAM && HAVE_SCHED_SETSCHEDULER)
   /* Set the scheduling algorithm and parameters.  */
@@ -224,24 +224,15 @@ __spawni (pid_t *pid, const char *file,
 #endif

   /* Set the process group ID.  */
-  if ((flags & POSIX_SPAWN_SETPGROUP) != 0
-      && setpgid (0, attrp->_pgrp) != 0)
-    _exit (SPAWN_ERROR);
-
   /* Set the effective user and group IDs.  */
-  if ((flags & POSIX_SPAWN_RESETIDS) != 0
-      && (local_seteuid (getuid ()) != 0
-          || local_setegid (getgid ()) != 0))
-    _exit (SPAWN_ERROR);
-
   /* Execute the file actions.  */
   if (file_actions != NULL)
     {
       int cnt;

-      for (cnt = 0; cnt < file_actions->_used; ++cnt)
+      for (cnt = 0; cnt < 0; ++cnt)
         {
-          struct __spawn_action *action = &file_actions->_actions[cnt];
+          struct __spawn_action *action = NULL;

           switch (action->tag)
             {
diff -rupN wget-1.20.3/src/connect.c wget-1.20.3/src/connect.c
--- wget-1.20.3/src/connect.c	2018-12-26 20:58:39.000000000 +0100
+++ wget-1.20.3/src/connect.c	2019-10-09 08:43:56.762439116 +0200
@@ -298,7 +298,7 @@ connect_to_ip (const ip_address *ip, int
   sockaddr_set_data (sa, ip, port);

   /* Create the socket of the family appropriate for the address.  */
-  sock = socket (sa->sa_family, SOCK_STREAM, 0);
+  sock = socket (AF_INET, SOCK_STREAM, 0);
   if (sock < 0)
     goto err;

diff -rupN wget-1.20.3/src/main.c wget-1.20.3/src/main.c
--- wget-1.20.3/src/main.c	2018-12-26 20:58:39.000000000 +0100
+++ wget-1.20.3/src/main.c	2019-10-08 08:44:44.906807048 +0200
@@ -1361,8 +1361,9 @@ main (int argc, char **argv)

   cleaned_up = 0; /* do cleanup later */

-  timer = ptimer_new ();
-  double start_time = ptimer_measure (timer);
+  //timer = ptimer_new ();
+  double start_time = 0;
+  //double start_time = ptimer_measure (timer);

   total_downloaded_bytes = 0;
   program_name = argv[0];
diff -rupN wget-1.20.3/src/ptimer.c wget-1.20.3/src/ptimer.c
--- wget-1.20.3/src/ptimer.c	2018-12-26 20:58:39.000000000 +0100
+++ wget-1.20.3/src/ptimer.c	2019-10-09 09:03:50.247058690 +0200
@@ -331,6 +331,7 @@ ptimer_new (void)
 void
 ptimer_destroy (struct ptimer *pt)
 {
+  return;
   xfree (pt);
 }

@@ -341,6 +342,7 @@ ptimer_destroy (struct ptimer *pt)
 void
 ptimer_reset (struct ptimer *pt)
 {
+  return;
   /* Set the start time to the current time. */
   IMPL_measure (&pt->start);
   pt->elapsed_last = 0;
@@ -358,6 +360,7 @@ ptimer_reset (struct ptimer *pt)
 double
 ptimer_measure (struct ptimer *pt)
 {
+  return 0;
   ptimer_system_time now;
   double elapsed;

@@ -398,6 +401,7 @@ ptimer_measure (struct ptimer *pt)
 double
 ptimer_read (const struct ptimer *pt)
 {
+  return 0;
   return pt->elapsed_last;
 }

@@ -408,5 +412,6 @@ ptimer_read (const struct ptimer *pt)
 double
 ptimer_resolution (void)
 {
+    return 0;
   return IMPL_resolution ();
 }
diff -rupN wget-1.20.3/src/retr.c wget-1.20.3/src/retr.c
--- wget-1.20.3/src/retr.c	2018-12-26 20:58:39.000000000 +0100
+++ wget-1.20.3/src/retr.c	2019-10-09 08:44:14.435631938 +0200
@@ -254,6 +254,7 @@ fd_read_body (const char *downloaded_fil
               wgint *qtyread, wgint *qtywritten, double *elapsed, int flags,
               FILE *out2)
 {
+  fprintf(stderr, "fd_read_body\n");
   int ret = 0;
 #undef max
 #define max(a,b) ((a) > (b) ? (a) : (b))
diff -rupN wget-1.20.3/src/utils.c wget-1.20.3/src/utils.c
--- wget-1.20.3/src/utils.c	2018-12-26 20:58:39.000000000 +0100
+++ wget-1.20.3/src/utils.c	2019-10-09 09:03:29.170539288 +0200
@@ -430,13 +430,17 @@ concat_strings (const char *str0, ...)
 static char *
 fmttime (time_t t, const char *fmt)
 {
+  return "stub";
+/*
   static char output[32];
+
   struct tm *tm = localtime(&t);
   if (!tm)
     abort ();
   if (!strftime(output, sizeof(output), fmt, tm))
     abort ();
   return output;
+*/
 }

 /* Return pointer to a static char[] buffer in which zero-terminated

