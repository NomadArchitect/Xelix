--- gcc-13.1.0/fixincludes/mkfixinc.sh
+++ b/fixincludes/mkfixinc.sh
@@ -11,6 +11,7 @@ target=fixinc.sh

 # Check for special fix rules for particular targets
 case $machine in
+    *-xelix-* | \
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
--- gcc-13.1.0/libstdc++-v3/crossconfig.m4	2019-02-28 00:22:34.907419609 +0100
+++ gcc-13.1.0/libstdc++-v3/crossconfig.m4	2019-02-28 00:23:40.386423732 +0100
@@ -291,6 +291,12 @@
     AC_DEFINE(HAVE_TANF)
     AC_DEFINE(HAVE_TANHF)
     ;;
+  *-xelix)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
   *)
     AC_MSG_ERROR([No support for this host/target combination.])
    ;;
--- gcc-13.1.0/libstdc++-v3/configure.host	2019-02-22 08:25:52.000000000 +0100
+++ gcc-13.1.0/libstdc++-v3/configure.host	2020-01-07 01:48:34.684537249 +0100
@@ -318,6 +318,9 @@ case "${host_os}" in
   vxworks)
     os_include_dir="os/vxworks"
     ;;
+  xelix)
+    os_include_dir="os/generic"
+    ;;
   *)
     os_include_dir="os/generic"
     ;;
--- gcc-13.1.0/libstdc++-v3/configure	2020-09-30 00:07:36.453707692 +0200
+++ gcc-13.1.0/libstdc++-v3/configure	2020-09-30 00:07:17.023791569 +0200
@@ -74117,9 +74117,9 @@ _ACEOF


     ;;
-  *)
-    as_fn_error $? "No support for this host/target combination." "$LINENO" 5
-   ;;
+#  *)
+#    as_fn_error $? "No support for this host/target combination." "$LINENO" 5
+#   ;;
 esac

   fi
--- gcc-13.1.0/gcc/configure	2020-09-30 01:02:35.104945210 +0200
+++ gcc-13.1.0/gcc/configure	2020-09-30 01:02:45.814901591 +0200
@@ -11623,13 +11623,6 @@ rlim_t l = 0;
   return 0;
 }
 _ACEOF
-if ac_fn_cxx_try_compile "$LINENO"; then :
-
-else
-
-$as_echo "#define rlim_t long" >>confdefs.h
-
-fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext

 # On AIX 5.2, <ldfcn.h> conflicts with <fcntl.h>, as both define incompatible
--- gcc-13.1.0/include/libiberty.h	2021-04-27 12:00:15.000000000 +0200
+++ gcc-13.1.0/include/libiberty.h	2021-07-15 03:50:45.621053990 +0200
@@ -48,6 +48,21 @@ extern "C" {
 
 #include <stdio.h>
 
+// These macros break when compiling for native Xelix for some reason
+#ifdef __xelix__
+	#undef ATTRIBUTE_RESULT_SIZE_1
+	#define ATTRIBUTE_RESULT_SIZE_1
+
+	#undef ATTRIBUTE_RESULT_SIZE_2
+	#define ATTRIBUTE_RESULT_SIZE_2
+
+	#undef ATTRIBUTE_RESULT_SIZE_1_2
+	#define ATTRIBUTE_RESULT_SIZE_1_2
+
+	#undef ATTRIBUTE_WARN_UNUSED_RESULT
+	#define ATTRIBUTE_WARN_UNUSED_RESULT
+#endif
+
 /* If the OS supports it, ensure that the supplied stream is setup to
    avoid any multi-threaded locking.  Otherwise leave the FILE pointer
    unchanged.  If the stream is NULL do nothing.  */
--- gcc-13.1.0/config.sub	2023-04-26 09:09:39.000000000 +0200
+++ gcc-13.1.0/config.sub.new	2023-05-17 05:27:04.321038888 +0200
@@ -1749,7 +1749,7 @@ case $os in
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
 	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
 	     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr* \
-	     | fiwix* )
+	     | fiwix* | xelix* )
 		;;
 	# This one is extra strict with allowed versions
 	sco3.2v2 | sco3.2v[4-9]* | sco5v6*)
--- gcc-13.1.0/gcc/config.gcc	2023-04-26 09:09:39.000000000 +0200
+++ gcc-13.1.0/gcc/config.gcc.new	2023-05-18 04:43:16.100167028 +0200
@@ -1113,6 +1113,13 @@ case ${target} in
       ;;
   esac
   ;;
+*-*-xelix*)
+  extra_parts="crtbegin.o crtend.o"
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=provide
+  ;;
 *-*-elf|arc*-*-elf*)
   # Assume that newlib is being used and so __cxa_atexit is provided.
   default_use_cxa_atexit=yes
@@ -2085,6 +2092,12 @@ i[4567]86-wrs-vxworks*|x86_64-wrs-vxwork
 	    ;;
 	esac
 	;;
+i[34567]86-*-xelix*)
+    tm_file="${tm_file} i386/unix.h i386/att.h elfos.h glibc-stdint.h i386/i386elf.h xelix.h"
+    ;;
+x86_64-*-xelix*)
+    tm_file="${tm_file} i386/unix.h i386/att.h elfos.h glibc-stdint.h i386/i386elf.h i386/x86-64.h xelix.h"
+    ;;
 i[34567]86-*-cygwin*)
 	tm_file="${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/cygming.h i386/cygwin.h i386/cygwin-stdint.h"
 	xm_file=i386/xm-cygwin.h
--- gcc-13.1.0/libgcc/config.host	2023-04-26 09:09:43.000000000 +0200
+++ gcc-13.1.0/libgcc/config.host.new	2023-05-18 04:46:46.202728785 +0200
@@ -777,6 +777,14 @@ i[34567]86-*-solaris2* | x86_64-*-solari
 	;;
 i[4567]86-wrs-vxworks*|x86_64-wrs-vxworks*)
 	;;
+i[34567]86-*-xelix*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o crtbeginS.o crtendS.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
+x86_64-*-xelix*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o crtbeginS.o crtendS.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
 i[34567]86-*-cygwin*)
 	extra_parts="crtbegin.o crtbeginS.o crtend.o crtfastmath.o"
 	if test x$enable_vtable_verify = xyes; then
