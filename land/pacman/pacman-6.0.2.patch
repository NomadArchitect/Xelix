diff --git a/lib/libalpm/diskspace.c b/lib/libalpm/diskspace.c
index 6293b753..343b458b 100644
--- a/lib/libalpm/diskspace.c
+++ b/lib/libalpm/diskspace.c
@@ -219,6 +219,7 @@ static alpm_mountpoint_t *match_mount_point(const alpm_list_t *mount_points,
 static int calculate_removed_size(alpm_handle_t *handle,
 		const alpm_list_t *mount_points, alpm_pkg_t *pkg)
 {
+	#ifndef __xelix__
 	size_t i;
 	alpm_filelist_t *filelist = alpm_pkg_get_files(pkg);
 
@@ -274,6 +275,7 @@ static int calculate_removed_size(alpm_handle_t *handle,
 		mp->blocks_needed -= remove_size;
 		mp->used |= USED_REMOVE;
 	}
+	#endif
 
 	return 0;
 }
@@ -281,6 +283,7 @@ static int calculate_removed_size(alpm_handle_t *handle,
 static int calculate_installed_size(alpm_handle_t *handle,
 		const alpm_list_t *mount_points, alpm_pkg_t *pkg)
 {
+	#ifndef __xelix__
 	size_t i;
 	alpm_filelist_t *filelist = alpm_pkg_get_files(pkg);
 
@@ -333,12 +336,14 @@ static int calculate_installed_size(alpm_handle_t *handle,
 		mp->blocks_needed += install_size;
 		mp->used |= USED_INSTALL;
 	}
+	#endif
 
 	return 0;
 }
 
 static int check_mountpoint(alpm_handle_t *handle, alpm_mountpoint_t *mp)
 {
+	#ifndef __xelix__
 	/* cushion is roughly min(5% capacity, 20MiB) */
 	fsblkcnt_t fivepc = (mp->fsp.f_blocks / 20) + 1;
 	fsblkcnt_t twentymb = (20 * 1024 * 1024 / mp->fsp.f_bsize) + 1;
@@ -355,12 +360,14 @@ static int check_mountpoint(alpm_handle_t *handle, alpm_mountpoint_t *mp)
 				mp->mount_dir, (intmax_t)needed, (uintmax_t)mp->fsp.f_bavail);
 		return 1;
 	}
+	#endif
 	return 0;
 }
 
 int _alpm_check_downloadspace(alpm_handle_t *handle, const char *cachedir,
 		size_t num_files, const off_t *file_sizes)
 {
+	#ifndef __xelix__
 	alpm_list_t *mount_points;
 	alpm_mountpoint_t *cachedir_mp;
 	char resolved_cachedir[PATH_MAX];
@@ -414,6 +421,7 @@ finish:
 	if(error) {
 		RET_ERR(handle, ALPM_ERR_DISK_SPACE, -1);
 	}
+	#endif
 
 	return 0;
 }
diff --git a/lib/libalpm/diskspace.h b/lib/libalpm/diskspace.h
index 8dac7bb6..413223b8 100644
--- a/lib/libalpm/diskspace.h
+++ b/lib/libalpm/diskspace.h
@@ -53,7 +53,7 @@ typedef struct __alpm_mountpoint_t {
 	enum mount_used_level used;
 	int read_only;
 	enum mount_fsinfo fsinfo_loaded;
-	FSSTATSTYPE fsp;
+	void* fsp;
 } alpm_mountpoint_t;
 
 int _alpm_check_diskspace(alpm_handle_t *handle);
diff --git a/lib/libalpm/log.c b/lib/libalpm/log.c
index c4d291cb..ee97a4f7 100644
--- a/lib/libalpm/log.c
+++ b/lib/libalpm/log.c
@@ -76,6 +76,7 @@ int SYMEXPORT alpm_logaction(alpm_handle_t *handle, const char *prefix,
 
 	va_start(args, fmt);
 
+	#ifndef __xelix__
 	if(handle->usesyslog) {
 		/* we can't use a va_list more than once, so we need to copy it
 		 * so we can use the original when calling vfprintf below. */
@@ -84,6 +85,7 @@ int SYMEXPORT alpm_logaction(alpm_handle_t *handle, const char *prefix,
 		vsyslog(LOG_WARNING, fmt, args_syslog);
 		va_end(args_syslog);
 	}
+	#endif
 
 	if(handle->logstream) {
 		if(_alpm_log_leader(handle->logstream, prefix) < 0
diff --git a/lib/libalpm/util.c b/lib/libalpm/util.c
index 299d287e..60a10fb4 100644
--- a/lib/libalpm/util.c
+++ b/lib/libalpm/util.c
@@ -613,7 +613,11 @@ int _alpm_run_chroot(alpm_handle_t *handle, const char *cmd, char *const argv[],
 	/* Flush open fds before fork() to avoid cloning buffers */
 	fflush(NULL);
 
+	#ifdef __xelix__
+	if(1) {
+	#else
 	if(socketpair(AF_UNIX, SOCK_STREAM, 0, child2parent_pipefd) == -1) {
+	#endif
 		_alpm_log(handle, ALPM_LOG_ERROR, _("could not create pipe (%s)\n"), strerror(errno));
 		retval = 1;
 		goto cleanup;
diff --git a/src/common/util-common.c b/src/common/util-common.c
index 3f547d3b..6a1ca445 100644
--- a/src/common/util-common.c
+++ b/src/common/util-common.c
@@ -188,7 +188,7 @@ size_t strtrim(char *str)
 	return end - pch;
 }
 
-#ifndef HAVE_STRNLEN
+#ifndef __xelix__
 /* A quick and dirty implementation derived from glibc */
 /** Determines the length of a fixed-size string.
  * @param s string to be measured
diff --git a/src/pacman/conf.c b/src/pacman/conf.c
index 12fee64c..915b41ec 100644
--- a/src/pacman/conf.c
+++ b/src/pacman/conf.c
@@ -1059,7 +1059,7 @@ static int process_include(const char *value, void *data,
 					"config file %s, line %d: include globbing out of space\n",
 					file, linenum);
 			break;
-		case GLOB_ABORTED:
+		case GLOB_ERR:
 			pm_printf(ALPM_LOG_DEBUG,
 					"config file %s, line %d: include globbing read error for %s\n",
 					file, linenum, value);
diff --git a/src/pacman/pacman.c b/src/pacman/pacman.c
index e398855a..56a765e6 100644
--- a/src/pacman/pacman.c
+++ b/src/pacman/pacman.c
@@ -1170,10 +1170,12 @@ int main(int argc, char *argv[])
 				cleanup(EXIT_FAILURE);
 			}
 
+			#ifndef __xelix__
 			if(!freopen(ctermid(NULL), "r", stdin)) {
 				pm_printf(ALPM_LOG_ERROR, _("failed to reopen stdin for reading: (%s)\n"),
 						strerror(errno));
 			}
+			#endif
 
 			if(!target_found) {
 				pm_printf(ALPM_LOG_ERROR, _("argument '-' specified with empty stdin\n"));
