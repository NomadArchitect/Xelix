%.o: %.c
	$(CC) $(MAKE_CFLAGS) -o $@ -c $<

%-asm.o: %.asm
	$(AS) -f elf -g -o $@ $(ASFLAGS) $<

.PHONY: INSTALL
install: xelix.bin
	sudo cp xelix.bin /boot/xelix || su -c 'cp xelix.bin /boot/xelix'
	sudo cp initrd.img /boot/xelix_initrd || su -c 'cp xelix.bin /boot/xelix_initrd'

.PHONY: mount
mount:
	- mkdir mount
	cp grub_floppy.img floppy.img
	sudo losetup /dev/loop0 floppy.img || su -c 'losetup /dev/loop0 floppy.img'
	sudo mount /dev/loop0 mount || su -c 'mount /dev/loop0 mount'

.PHONY: unmount
unmount:
	sudo umount mount || su -c 'umount mount'
	sudo losetup -d /dev/loop0 || su -c 'losetup -d /dev/loop0'
	- rm -rf mount

floppy.img: xelix.bin mount
	sudo cp xelix.bin mount/kernel || su -c 'cp xelix.bin mount/kernel'
	sudo cp initrd.img mount/ || su -c 'cp initrd.img mount/'
	sleep 0.5
	sudo umount mount || su -c 'umount mount'
	sudo losetup -d /dev/loop0 || su -c 'losetup -d /dev/loop0'
	- rm -rf mount

.PHONY: runqemufloppy
runqemufloppy: floppy.img
	- rm /var/qemu.log
	qemu -monitor stdio -fda floppy.img $(MAKE_QEMU_FLAGS)

.PHONY: gdb
gdb:
	gdb xelix.bin -ex "target remote :1234"

.PHONY: runbochsfloppy
runbochsfloppy: floppy.img
	bochs -f bochsrc.txt -q

.PHONY: runqemu
runqemu: xelix.bin
	qemu -monitor stdio -kernel xelix.bin -initrd initrd.img $(MAKE_QEMU_FLAGS)

.PHONY: runqemudebug
runqemudebug: xelix.bin
	qemu -kernel xelix.bin -initrd initrd.img $(MAKE_QEMU_FLAGS)

.PHONY: runqemunox
runqemunox: xelix.bin
	@echo "Exit with ^A-x"
	qemu -kernel xelix.bin -nographic -initrd initrd.img $(MAKE_QEMU_FLAGS)

xelix.iso: floppy.img
	mkisofs -o xelix.iso -A Xelix -b floppy.img floppy.img

.PHONY: iso
iso: xelix.iso

.PHONY: runvboxfloppy	
runvboxfloppy: floppy.img
	VBoxSDL -fda floppy.img --startvm Xelix

.PHONY: strip
strip: xelix.bin
	strip xelix.bin

.PHONY: count
count:
	find -L src -type f -iregex "^.*\.\(c\|h\|asm\)" | xargs wc | tail -n 1 2> /dev/null 

.PHONY: clean
clean:
	find -L src -type f -iregex "^.*\.o" | xargs rm -f
