.PHONY: all
all: xelix.bin

PATH += :toolchain/local/bin
CC := i786-pc-xelix-gcc
LD := $(CC)
AS := nasm
QEMU := qemu-system-i386

ifeq ($(BUILD),)
	BUILD := 0
endif

MAKE_CFLAGS = -std=gnu18 -ffreestanding -g -O3 -pipe -masm=intel -mtune=sandybridge -mgeneral-regs-only -mhard-float -fstack-protector-strong -Wall -I src -I src/lib -include src/lib/generic.h
MAKE_LDFLAGS = -T linker.ld -nostdlib -lgcc
MAKE_ASFLAGS = -g -f elf

ifeq ($(shell uname -s), Darwin)
	AS := $(shell find /usr/local/Cellar/nasm/*/bin/nasm)
endif

MAKE_CFLAGS += $(CFLAGS)
MAKE_QEMU_FLAGS = -netdev bridge,id=mnet0,br=br-vms -device rtl8139,netdev=mnet0 -m 250 -no-kvm -cpu SandyBridge -serial mon:stdio -no-reboot -soundhw ac97 -d cpu_reset,guest_errors,unimp,page
MAKE_QEMU_FLAGS += $(QEMU_FLAGS)
MAKE_LDFLAGS += $(LDFLAGS)

# Work around missing stringbuffer include
src/lib/strbuffer/%.o: src/lib/strbuffer/%.c src/lib/generic.h src/lib/config.h
	$(CC) $(MAKE_CFLAGS) -include "src/lib/string.h" -o $@ -c $<

%.o: %.c src/lib/generic.h src/lib/config.h
	$(CC) $(MAKE_CFLAGS) -o $@ -c $<

%-asm.o: %.asm
	$(AS) $(MAKE_ASFLAGS) -o $@ $<

$(CC):
	make -C toolchain

.PHONY: run
run: xelix.bin
	$(QEMU) -kernel xelix.bin -hda xelix.qcow2 $(MAKE_QEMU_FLAGS)

.PHONY: clean
clean:
	find -L src -type f -iregex "^.*\.o" | xargs rm -f

.PHONY: land
land:
	make -C land

%config: clean
	make -C util/kconfig $@
	util/genconfigh.sh

.PHONY: xelix.qcow2
xelix.qcow2:
	util/build-image.sh $@

mount:
	sudo qemu-nbd --connect /dev/nbd0 xelix.qcow2
	sudo mount /dev/nbd0 mnt

umount:
	sudo umount mnt
	sudo qemu-nbd --disconnect /dev/nbd0
